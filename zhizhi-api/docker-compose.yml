version: '3.8'

services:
  # PostgreSQL数据库
  postgres:
    image: postgres:15-alpine
    container_name: zhizhi-postgres
    environment:
      POSTGRES_DB: zhizhi_health
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - ../database/seeds.sql:/docker-entrypoint-initdb.d/seeds.sql
    networks:
      - zhizhi-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: zhizhi-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - zhizhi-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # API服务
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: zhizhi-api
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: zhizhi_health
      DB_USER: postgres
      DB_PASSWORD: password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: your-jwt-secret-change-in-production
      JWT_REFRESH_SECRET: your-refresh-secret-change-in-production
      LOG_LEVEL: info
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - zhizhi-network
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  # Nginx反向代理 (可选)
  nginx:
    image: nginx:alpine
    container_name: zhizhi-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - api
    networks:
      - zhizhi-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  zhizhi-network:
    driver: bridge